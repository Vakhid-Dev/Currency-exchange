// <auto-generated />
using System;
using CurenncyExchange.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurenncyExchange.Transaction.Data.Migrations
{
    [DbContext(typeof(TransactionContext))]
    [Migration("20220301072152_init3")]
    partial class init3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CurenncyExchange.Core.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountBalance")
                        .HasColumnType("int");

                    b.Property<Guid>("CurrencyDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("CurenncyExchange.Core.CurrencyDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ammount")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyDetails");
                });

            modelBuilder.Entity("CurenncyExchange.Transaction.Core.TransactionCurrency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrencyDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId");

                    b.HasIndex("CurrencyDetailsId");

                    b.ToTable("TransactionDetails");
                });

            modelBuilder.Entity("CurenncyExchange.Transaction.Core.TransactionCurrency", b =>
                {
                    b.HasOne("CurenncyExchange.Core.Account", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountsId");

                    b.HasOne("CurenncyExchange.Core.CurrencyDetails", "CurrencyDetails")
                        .WithMany()
                        .HasForeignKey("CurrencyDetailsId");

                    b.Navigation("Accounts");

                    b.Navigation("CurrencyDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
